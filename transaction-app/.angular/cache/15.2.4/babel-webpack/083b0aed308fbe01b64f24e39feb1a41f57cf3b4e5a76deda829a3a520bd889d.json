{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { Constants } from \"../common/Constants\";\nimport { AuthorizationUtil } from \"../common/AuthorizationUtil\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerServiceManager {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.ordersUrl = Constants.API_ENDPOINT + 'orders';\n    this.mealsUrl = Constants.MAIN_PANEL_API_ENDPOINT + 'meals';\n  }\n  getMeals() {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    };\n    const requestOptions = {\n      headers: new HttpHeaders(headers)\n    };\n    return this.httpClient.get(this.mealsUrl, requestOptions);\n  }\n  getMeal(id) {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    };\n    const requestOptions = {\n      headers: new HttpHeaders(headers)\n    };\n    return this.httpClient.get(this.mealsUrl + \"/\" + id, requestOptions);\n  }\n  getOrders() {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    };\n    const requestOptions = {\n      headers: new HttpHeaders(headers)\n    };\n    return this.httpClient.get(this.ordersUrl, requestOptions);\n  }\n  getOrder(id) {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    };\n    const requestOptions = {\n      headers: new HttpHeaders(headers)\n    };\n    return this.httpClient.get(this.ordersUrl + \"/\" + id, requestOptions);\n  }\n  addOrder(order) {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    };\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n      observe: 'response'\n    };\n    return this.httpClient.post(this.ordersUrl, order, requestOptions);\n  }\n  editOrder(id, order) {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    };\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n      observe: 'response'\n    };\n    return this.httpClient.put(this.ordersUrl + \"/\" + id, order, requestOptions);\n  }\n  removeMeal(id) {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken()\n    };\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n      observe: 'response'\n    };\n    return this.httpClient.delete(this.ordersUrl + \"/\" + id, requestOptions);\n  }\n}\nCustomerServiceManager.ɵfac = function CustomerServiceManager_Factory(t) {\n  return new (t || CustomerServiceManager)(i0.ɵɵinject(i1.HttpClient));\n};\nCustomerServiceManager.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerServiceManager,\n  factory: CustomerServiceManager.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","Constants","AuthorizationUtil","CustomerServiceManager","constructor","httpClient","API_ENDPOINT","MAIN_PANEL_API_ENDPOINT","getMeals","headers","getBearerToken","observe","requestOptions","get","mealsUrl","getMeal","id","getOrders","ordersUrl","getOrder","addOrder","order","post","editOrder","put","removeMeal","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/pkocur/IdeaProjects/restaurant-manager-frontend/transaction-app/src/app/service/customer-service-manager.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Meal} from \"../model/meal\";\nimport {Constants} from \"../common/Constants\";\nimport {AuthorizationUtil} from \"../common/AuthorizationUtil\";\nimport {Order} from \"../model/order\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerServiceManager {\n  public ordersUrl = Constants.API_ENDPOINT + 'orders';\n  public mealsUrl = Constants.MAIN_PANEL_API_ENDPOINT + 'meals';\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  public getMeals(): Observable<Meal[]> {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n    };\n    return this.httpClient.get<Meal[]>(this.mealsUrl, requestOptions);\n  }\n\n  public getMeal(id: number): Observable<Meal> {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n    };\n    return this.httpClient.get<Meal>(this.mealsUrl + \"/\" + id, requestOptions);\n  }\n\n  public getOrders(): Observable<Order[]> {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n    };\n    return this.httpClient.get<Order[]>(this.ordersUrl, requestOptions);\n  }\n\n  public getOrder(id: number): Observable<Order> {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n    };\n    return this.httpClient.get<Order>(this.ordersUrl + \"/\" + id, requestOptions);\n  }\n\n  public addOrder(order: Partial<Order>): Observable<any> {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n      observe: 'response' as 'body'\n    };\n    return this.httpClient.post(this.ordersUrl, order, requestOptions);\n  }\n\n  public editOrder(id: number, order: Partial<Order>): Observable<any> {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken(),\n      observe: 'response'\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n      observe: 'response' as 'body'\n    };\n    return this.httpClient.put(this.ordersUrl + \"/\" + id, order, requestOptions);\n  }\n\n  public removeMeal(id: number): Observable<any> {\n    const headers = {\n      'Authorization': 'Bearer ' + AuthorizationUtil.getBearerToken()\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headers),\n      observe: 'response' as 'body'\n    };\n    return this.httpClient.delete(this.ordersUrl + \"/\" + id, requestOptions);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
