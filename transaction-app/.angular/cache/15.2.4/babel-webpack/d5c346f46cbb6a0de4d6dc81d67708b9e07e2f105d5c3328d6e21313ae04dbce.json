{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet OrderComponent = class OrderComponent {\n  constructor(customerServiceManager, formBuilder) {\n    this.customerServiceManager = customerServiceManager;\n    this.formBuilder = formBuilder;\n    this.addedMeals = new Map();\n    this.addOrderForm = this.formBuilder.group({\n      name: '',\n      price: ''\n    });\n  }\n  ngOnInit() {\n    this.getOrders();\n    this.getMeals();\n    console.log(new window.bootstrap.Modal(document.getElementById('addOrderModal')));\n    this.addOrderModal = new window.bootstrap.Modal(document.getElementById('addOrderModal'));\n  }\n  getMeals() {\n    this.customerServiceManager.getMeals().subscribe(data => {\n      this.meals = data;\n    });\n  }\n  getOrders() {\n    this.customerServiceManager.getOrders().subscribe(data => {\n      this.orders = data;\n    });\n  }\n  onAddOrderFormSubmit() {\n    this.addOrderForm.reset();\n  }\n  openAddOrderModal() {\n    this.addOrderModal.show();\n  }\n  closeAddOrderModal() {\n    this.addedMeals.clear();\n    this.addOrderModal.hide();\n  }\n  addMeal(id) {\n    if (id) {\n      this.customerServiceManager.getMeal(id).subscribe(meal => {\n        const mealFromMap = Array.from(this.addedMeals.keys()).find(m => m.id === meal.id);\n        if (mealFromMap) {\n          const quantity = this.addedMeals.get(mealFromMap) || 0;\n          this.addedMeals.set(mealFromMap, quantity + 1);\n        } else {\n          this.addedMeals.set(meal, 1);\n        }\n      });\n    }\n  }\n  removeMeal(id) {\n    if (id) {\n      const mealFromMap = Array.from(this.addedMeals.keys()).find(m => m.id === id);\n      if (mealFromMap) {\n        const quantity = this.addedMeals.get(mealFromMap) || 0;\n        if (quantity > 1) {\n          this.addedMeals.set(mealFromMap, quantity - 1);\n        } else {\n          this.addedMeals.delete(mealFromMap);\n        }\n      }\n    }\n  }\n  getTotalCost() {\n    let totalCost = 0;\n    this.addedMeals.forEach((quantity, meal) => {\n      if (meal.price) {\n        totalCost += meal.price * quantity;\n      }\n    });\n    return totalCost;\n  }\n};\nOrderComponent = __decorate([Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})], OrderComponent);\nexport { OrderComponent };","map":{"version":3,"mappings":"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","names":["Component","OrderComponent","constructor","customerServiceManager","formBuilder","Map","group","name","price","ngOnInit","getOrders","getMeals","console","log","window","bootstrap","Modal","document","getElementById","addOrderModal","subscribe","data","meals","orders","onAddOrderFormSubmit","addOrderForm","reset","openAddOrderModal","show","closeAddOrderModal","addedMeals","clear","hide","addMeal","id","getMeal","meal","mealFromMap","Array","from","keys","find","m","quantity","get","set","removeMeal","delete","getTotalCost","totalCost","forEach","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/pkocur/IdeaProjects/restaurant-manager-frontend/transaction-app/src/app/component/order/order.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {Order} from \"../../model/order\";\nimport {CustomerServiceManager} from \"../../service/customer-service-manager.service\";\nimport {Meal} from \"../../model/meal\";\n\ndeclare var window: any;\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n  orders!: Order[];\n  meals!: Meal[];\n  addedMeals: Map<Meal, number> = new Map<Meal, number>();\n  addOrderModal: any;\n\n  addOrderForm = this.formBuilder.group({\n    name: '',\n    price: ''\n  });\n\n\n  constructor(private customerServiceManager: CustomerServiceManager,\n              private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.getOrders();\n    this.getMeals();\n    console.log(new window.bootstrap.Modal(\n      document.getElementById('addOrderModal')\n    ))\n    this.addOrderModal = new window.bootstrap.Modal(\n      document.getElementById('addOrderModal')\n    );\n  }\n\n  getMeals() {\n    this.customerServiceManager.getMeals().subscribe(data => {\n      this.meals = data;\n    })\n  }\n\n  getOrders() {\n    this.customerServiceManager.getOrders().subscribe(data => {\n      this.orders = data;\n    })\n  }\n\n  onAddOrderFormSubmit(): void {\n    this.addOrderForm.reset();\n  }\n\n  openAddOrderModal() {\n    this.addOrderModal.show();\n  }\n\n  closeAddOrderModal() {\n    this.addedMeals.clear();\n    this.addOrderModal.hide();\n  }\n\n  addMeal(id: number | null | undefined) {\n    if (id) {\n      this.customerServiceManager.getMeal(id).subscribe(meal => {\n        const mealFromMap = Array.from(this.addedMeals.keys()).find(m => m.id === meal.id);\n        if (mealFromMap) {\n          const quantity = this.addedMeals.get(mealFromMap) || 0;\n          this.addedMeals.set(mealFromMap, quantity + 1);\n        } else {\n          this.addedMeals.set(meal, 1);\n        }\n      })\n    }\n  }\n\n  removeMeal(id: number | null | undefined) {\n    if (id) {\n      const mealFromMap = Array.from(this.addedMeals.keys()).find(m => m.id === id);\n      if (mealFromMap) {\n        const quantity = this.addedMeals.get(mealFromMap) || 0;\n        if (quantity > 1) {\n          this.addedMeals.set(mealFromMap, quantity - 1);\n        } else {\n          this.addedMeals.delete(mealFromMap);\n        }\n      }\n    }\n  }\n\n  getTotalCost() {\n    let totalCost: number = 0;\n    this.addedMeals.forEach((quantity, meal) => {\n      if (meal.price) {\n        totalCost += meal.price * quantity;\n      }\n    });\n    return totalCost;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
