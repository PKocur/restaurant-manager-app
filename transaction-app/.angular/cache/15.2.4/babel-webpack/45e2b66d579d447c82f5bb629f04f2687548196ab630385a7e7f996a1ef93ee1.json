{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/customer-service-manager.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction OrderComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"span\", 19);\n    i0.ɵɵtext(3, \"Order of \");\n    i0.ɵɵelementStart(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"button\", 20);\n    i0.ɵɵtext(7, \"+\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const order_r2 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(order_r2.recognitionId);\n  }\n}\nfunction OrderComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"span\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 20);\n    i0.ɵɵtext(5, \"+\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const meal_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(meal_r4.name);\n  }\n}\nexport class OrderComponent {\n  constructor(customerServiceManager, formBuilder) {\n    this.customerServiceManager = customerServiceManager;\n    this.formBuilder = formBuilder;\n    this.addOrderForm = this.formBuilder.group({\n      name: '',\n      price: ''\n    });\n  }\n  ngOnInit() {\n    this.getOrders();\n    this.getMeals();\n    console.log(new window.bootstrap.Modal(document.getElementById('addOrderModal')));\n    this.addOrderModal = new window.bootstrap.Modal(document.getElementById('addOrderModal'));\n  }\n  getMeals() {\n    this.customerServiceManager.getMeals().subscribe(data => {\n      this.meals = data;\n    });\n  }\n  getOrders() {\n    this.customerServiceManager.getOrders().subscribe(data => {\n      this.orders = data;\n    });\n  }\n  onAddMeal(mealId) {\n    this.customerServiceManager.getMeal(mealId).subscribe(meal => {\n      this.addedMeals.push(meal);\n    });\n  }\n  onAddOrderFormSubmit() {\n    this.addOrderForm.reset();\n  }\n  openAddOrderModal() {\n    this.addOrderModal.show();\n  }\n  closeAddOrderModal() {\n    this.addedMeals = [];\n    this.addOrderModal.hide();\n  }\n}\nOrderComponent.ɵfac = function OrderComponent_Factory(t) {\n  return new (t || OrderComponent)(i0.ɵɵdirectiveInject(i1.CustomerServiceManager), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderComponent,\n  selectors: [[\"app-order\"]],\n  decls: 26,\n  vars: 4,\n  consts: [[1, \"row\"], [\"class\", \"mx-5 col-3 my-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"display-1\", \"mx-5\", \"col-3\", \"my-3\", \"alert\", \"alert-info\", 3, \"click\"], [\"id\", \"addOrderModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addOrderModal\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [3, \"noValidate\", \"formGroup\", \"ngSubmit\"], [1, \"modal-body\"], [1, \"my-2\", \"form-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"placeholder\", \"Enter order name\", \"required\", \"\", \"minlength\", \"3\", \"maxlength\", \"50\", \"formControlName\", \"name\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"mx-5\", \"col-3\", \"my-3\"], [\"role\", \"alert\", 1, \"alert\", \"alert-primary\", \"id\"], [1, \"fs-3\"], [1, \"m-1\", \"btn\", \"btn-info\"]],\n  template: function OrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, OrderComponent_div_1_Template, 8, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function OrderComponent_Template_button_click_2_listener() {\n        return ctx.openAddOrderModal();\n      });\n      i0.ɵɵtext(3, \" + \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"h5\", 7);\n      i0.ɵɵtext(9, \"Add order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"button\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"form\", 9);\n      i0.ɵɵlistener(\"ngSubmit\", function OrderComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.onAddOrderFormSubmit();\n      });\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 11)(14, \"label\", 12);\n      i0.ɵɵtext(15, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 0);\n      i0.ɵɵtemplate(18, OrderComponent_div_18_Template, 6, 1, \"div\", 1);\n      i0.ɵɵelementStart(19, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function OrderComponent_Template_button_click_19_listener() {\n        return ctx.openAddOrderModal();\n      });\n      i0.ɵɵtext(20, \" + \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 14)(22, \"button\", 15);\n      i0.ɵɵtext(23, \" Close \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 16);\n      i0.ɵɵtext(25, \" Add \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"noValidate\", false)(\"formGroup\", ctx.addOrderForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.meals);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IACEA,+BAA2E;IAEpDA,yBAAS;IAAAA,yBAAG;IAAAA,YAAuB;IAAAA,iBAAI;IAE5DA,kCAAiC;IAAAA,iBAAC;IAAAA,iBAAS;;;;IAFVA,eAAuB;IAAvBA,4CAAuB;;;;;IAwChDA,+BAAyE;IAElDA,YAAa;IAAAA,iBAAO;IAEzCA,kCAAiC;IAAAA,iBAAC;IAAAA,iBAAS;;;;IAFtBA,eAAa;IAAbA,kCAAa;;;AChChD,OAAM,MAAOC,cAAc;EAYzBC,YAAoBC,sBAA8C,EAC9CC,WAAwB;IADxB,2BAAsB,GAAtBD,sBAAsB;IACtB,gBAAW,GAAXC,WAAW;IAP/B,iBAAY,GAAG,IAAI,CAACA,WAAW,CAACC,KAAK,CAAC;MACpCC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;KACR,CAAC;EAKF;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,QAAQ,EAAE;IACfC,OAAO,CAACC,GAAG,CAAC,IAAIC,MAAM,CAACC,SAAS,CAACC,KAAK,CACpCC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CACzC,CAAC;IACF,IAAI,CAACC,aAAa,GAAG,IAAIL,MAAM,CAACC,SAAS,CAACC,KAAK,CAC7CC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CACzC;EACH;EAEAP,QAAQ;IACN,IAAI,CAACP,sBAAsB,CAACO,QAAQ,EAAE,CAACS,SAAS,CAACC,IAAI,IAAG;MACtD,IAAI,CAACC,KAAK,GAAGD,IAAI;IACnB,CAAC,CAAC;EACJ;EAEAX,SAAS;IACP,IAAI,CAACN,sBAAsB,CAACM,SAAS,EAAE,CAACU,SAAS,CAACC,IAAI,IAAG;MACvD,IAAI,CAACE,MAAM,GAAGF,IAAI;IACpB,CAAC,CAAC;EACJ;EAEAG,SAAS,CAACC,MAAc;IACtB,IAAI,CAACrB,sBAAsB,CAACsB,OAAO,CAACD,MAAM,CAAC,CAACL,SAAS,CAACO,IAAI,IAAG;MAC3D,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,IAAI,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAG,oBAAoB;IAClB,IAAI,CAACC,YAAY,CAACC,KAAK,EAAE;EAC3B;EAEAC,iBAAiB;IACf,IAAI,CAACd,aAAa,CAACe,IAAI,EAAE;EAC3B;EAEAC,kBAAkB;IAChB,IAAI,CAACP,UAAU,GAAG,EAAE;IACpB,IAAI,CAACT,aAAa,CAACiB,IAAI,EAAE;EAC3B;;AAxDWlC,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAmC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDb3BxC,8BAAiB;MACfA,+DAKM;MACNA,iCAAyF;MAA9BA;QAAA,OAASyC,uBAAmB;MAAA,EAAC;MACtFzC,mBACF;MAAAA,iBAAS;MAKXA,8BAMC;MAI+BA,yBAAS;MAAAA,iBAAK;MACtCA,6BAKU;MACZA,iBAAM;MACNA,gCAA0F;MAApCA;QAAA,OAAYyC,0BAAsB;MAAA,EAAC;MACvFzC,gCAAwB;MAGlBA,uBACF;MAAAA,iBAAQ;MACRA,6BAC8C;MAChDA,iBAAM;MAENA,+BAAiB;MACfA,iEAKM;MACNA,kCAAyF;MAA9BA;QAAA,OAASyC,uBAAmB;MAAA,EAAC;MACtFzC,oBACF;MAAAA,iBAAS;MAGbA,gCAA0B;MAEtBA,wBACF;MAAAA,iBAAS;MACTA,mCAA8C;MAC5CA,sBACF;MAAAA,iBAAS;;;MA3D8BA,eAAW;MAAXA,oCAAW;MA+BhDA,gBAAoB;MAApBA,kCAAoB;MAW0BA,eAAU;MAAVA,mCAAU","names":["i0","OrderComponent","constructor","customerServiceManager","formBuilder","group","name","price","ngOnInit","getOrders","getMeals","console","log","window","bootstrap","Modal","document","getElementById","addOrderModal","subscribe","data","meals","orders","onAddMeal","mealId","getMeal","meal","addedMeals","push","onAddOrderFormSubmit","addOrderForm","reset","openAddOrderModal","show","closeAddOrderModal","hide","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/pkocur/IdeaProjects/restaurant-manager-frontend/transaction-app/src/app/component/order/order.component.html","/home/pkocur/IdeaProjects/restaurant-manager-frontend/transaction-app/src/app/component/order/order.component.ts"],"sourcesContent":["<div class=\"row\">\n  <div class=\"mx-5 col-3 my-3\" *ngFor=\"let order of orders; let index=index\">\n    <div class=\"alert alert-primary id\" role=\"alert\">\n      <span class=\"fs-3\">Order of <b>{{order.recognitionId}}</b></span>\n    </div>\n    <button class=\"m-1 btn btn-info\">+</button>\n  </div>\n  <button class=\"display-1 mx-5 col-3 my-3 alert alert-info\" (click)=\"openAddOrderModal()\">\n    +\n  </button>\n</div>\n\n<!-- Add order modal-->\n\n<div\n  class=\"modal fade\"\n  id=\"addOrderModal\"\n  tabindex=\"-1\"\n  aria-labelledby=\"addOrderModal\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Add order</h5>\n        <button\n          type=\"button\"\n          class=\"btn-close\"\n          data-bs-dismiss=\"modal\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n      <form [noValidate]=\"false\" [formGroup]=\"addOrderForm\" (ngSubmit)=\"onAddOrderFormSubmit()\">\n        <div class=\"modal-body\">\n          <div class=\"my-2 form-group\">\n            <label for=\"name\">\n              Name\n            </label>\n            <input class=\"form-control\" id=\"name\" type=\"text\" placeholder=\"Enter order name\" required minlength=\"3\"\n                   maxlength=\"50\" formControlName=\"name\"/>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"mx-5 col-3 my-3\" *ngFor=\"let meal of meals; let index=index\">\n              <div class=\"alert alert-primary id\" role=\"alert\">\n                <span class=\"fs-3\">{{meal.name}}</span>\n              </div>\n              <button class=\"m-1 btn btn-info\">+</button>\n            </div>\n            <button class=\"display-1 mx-5 col-3 my-3 alert alert-info\" (click)=\"openAddOrderModal()\">\n              +\n            </button>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n            Close\n          </button>\n          <button type=\"submit\" class=\"btn btn-primary\">\n            Add\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {Order} from \"../../model/order\";\nimport {CustomerServiceManager} from \"../../service/customer-service-manager.service\";\nimport {Meal} from \"../../model/meal\";\n\ndeclare var window: any;\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n  orders!: Order[];\n  meals!: Meal[];\n  addedMeals!: Meal[];\n  addOrderModal: any;\n\n  addOrderForm = this.formBuilder.group({\n    name: '',\n    price: ''\n  });\n\n\n  constructor(private customerServiceManager: CustomerServiceManager,\n              private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.getOrders();\n    this.getMeals();\n    console.log(new window.bootstrap.Modal(\n      document.getElementById('addOrderModal')\n    ))\n    this.addOrderModal = new window.bootstrap.Modal(\n      document.getElementById('addOrderModal')\n    );\n  }\n\n  getMeals() {\n    this.customerServiceManager.getMeals().subscribe(data => {\n      this.meals = data;\n    })\n  }\n\n  getOrders() {\n    this.customerServiceManager.getOrders().subscribe(data => {\n      this.orders = data;\n    })\n  }\n\n  onAddMeal(mealId: number): void {\n    this.customerServiceManager.getMeal(mealId).subscribe(meal => {\n      this.addedMeals.push(meal)\n    })\n  }\n\n  onAddOrderFormSubmit(): void {\n    this.addOrderForm.reset();\n  }\n\n  openAddOrderModal() {\n    this.addOrderModal.show();\n  }\n\n  closeAddOrderModal() {\n    this.addedMeals = [];\n    this.addOrderModal.hide();\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
