{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/main-panel.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction MealsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 18)(2, \"div\", 19)(3, \"div\", 20)(4, \"span\", 21);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 21);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function MealsComponent_div_0_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const meal_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeMeal(meal_r1.id));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const meal_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(meal_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" - \", meal_r1.price, \" z\\u0142\");\n  }\n}\nexport class MealsComponent {\n  constructor(mainPanelService, formBuilder) {\n    this.mainPanelService = mainPanelService;\n    this.formBuilder = formBuilder;\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      price: ''\n    });\n  }\n  onSubmit() {\n    this.addMeal({\n      \"name\": this.checkoutForm.value.name,\n      \"price\": Number(this.checkoutForm.value.price)\n    });\n    this.checkoutForm.reset();\n  }\n  ngOnInit() {\n    this.getMeals();\n    this.addMealModal = new window.bootstrap.Modal(document.getElementById('addMealModal'));\n  }\n  getMeals() {\n    this.mainPanelService.getMeals().subscribe(data => {\n      this.meals = data;\n    });\n  }\n  addMeal(meal) {\n    this.mainPanelService.addMeal(meal).subscribe(data => {\n      if (data) {\n        this.getMeals();\n      }\n    });\n  }\n  removeMeal(id) {\n    if (id) {\n      this.mainPanelService.removeMeal(id).subscribe(data => {\n        if (data) {\n          this.getMeals();\n        }\n      });\n    }\n  }\n  openAddMealModal() {\n    this.addMealModal.show();\n  }\n  closeAddMealModal() {\n    this.addMealModal.hide();\n  }\n}\nMealsComponent.ɵfac = function MealsComponent_Factory(t) {\n  return new (t || MealsComponent)(i0.ɵɵdirectiveInject(i1.MainPanelService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nMealsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MealsComponent,\n  selectors: [[\"app-meals\"]],\n  decls: 25,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"addMealModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"addMealModal\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [3, \"noValidate\", \"formGroup\", \"ngSubmit\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"placeholder\", \"Enter meal name\", \"required\", \"\", \"minlength\", \"3\", \"maxlength\", \"50\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"price\"], [\"id\", \"price\", \"type\", \"number\", \"placeholder\", \"Enter meal price\", \"required\", \"\", \"step\", \"0.01\", \"min\", \"0.01\", \"formControlName\", \"price\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"row\"], [1, \"offset-4\", \"col-4\", \"text-center\"], [\"role\", \"alert\", 1, \"mt-5\", \"mb-3\", \"alert\", \"alert-primary\", \"id\"], [1, \"display-7\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function MealsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MealsComponent_div_0_Template, 10, 2, \"div\", 0);\n      i0.ɵɵelementStart(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function MealsComponent_Template_button_click_1_listener() {\n        return ctx.openAddMealModal();\n      });\n      i0.ɵɵtext(2, \"Add meal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"h5\", 6);\n      i0.ɵɵtext(8, \"Add meal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"button\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function MealsComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"label\", 11);\n      i0.ɵɵtext(14, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 13);\n      i0.ɵɵtext(18, \" Price \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 15)(21, \"button\", 16);\n      i0.ɵɵtext(22, \" Close \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 17);\n      i0.ɵɵtext(24, \" Add \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.meals);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"noValidate\", false)(\"formGroup\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.MaxLengthValidator, i2.MinValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAAAA,2BAAgC;IAIAA,YAAa;IAAAA,iBAAO;IAC5CA,gCAAwB;IAACA,YAAmB;IAAAA,iBAAO;IAEvDA,kCAA6D;IAA9BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;;IAHhDA,eAAa;IAAbA,kCAAa;IACZA,eAAmB;IAAnBA,uDAAmB;;;ACMpD,OAAM,MAAOC,cAAc;EASzBC,YAAoBC,gBAAkC,EAClCC,WAAwB;IADxB,qBAAgB,GAAhBD,gBAAgB;IAChB,gBAAW,GAAXC,WAAW;IAN/B,iBAAY,GAAG,IAAI,CAACA,WAAW,CAACC,KAAK,CAAC;MACpCC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;KACR,CAAC;EAIF;EAEAC,QAAQ;IACN,IAAI,CAACC,OAAO,CAAC;MACX,MAAM,EAAE,IAAI,CAACC,YAAY,CAACC,KAAK,CAACL,IAAI;MACpC,OAAO,EAAEM,MAAM,CAAC,IAAI,CAACF,YAAY,CAACC,KAAK,CAACJ,KAAK;KAC9C,CAAC;IACF,IAAI,CAACG,YAAY,CAACG,KAAK,EAAE;EAC3B;EAGAC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,YAAY,GAAG,IAAIC,MAAM,CAACC,SAAS,CAACC,KAAK,CAC5CC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CACxC;EACH;EAEAN,QAAQ;IACN,IAAI,CAACZ,gBAAgB,CAACY,QAAQ,EAAE,CAACO,SAAS,CAACC,IAAI,IAAG;MAChD,IAAI,CAACC,KAAK,GAAGD,IAAI;IACnB,CAAC,CAAC;EACJ;EAEAd,OAAO,CAACgB,IAAmB;IACzB,IAAI,CAACtB,gBAAgB,CAACM,OAAO,CAACgB,IAAI,CAAC,CAACH,SAAS,CAACC,IAAI,IAAG;MACnD,IAAIA,IAAI,EAAE;QACR,IAAI,CAACR,QAAQ,EAAE;;IAEnB,CAAC,CAAC;EACJ;EAEAW,UAAU,CAACC,EAA6B;IACtC,IAAIA,EAAE,EAAE;MACN,IAAI,CAACxB,gBAAgB,CAACuB,UAAU,CAACC,EAAE,CAAC,CAACL,SAAS,CAACC,IAAI,IAAG;QACpD,IAAIA,IAAI,EAAE;UACR,IAAI,CAACR,QAAQ,EAAE;;MAEnB,CAAC,CAAC;;EAEN;EAEAa,gBAAgB;IACd,IAAI,CAACZ,YAAY,CAACa,IAAI,EAAE;EAC1B;EAEAC,iBAAiB;IACf,IAAI,CAACd,YAAY,CAACe,IAAI,EAAE;EAC1B;;AA3DW9B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX3BpC,gEAUM;MAENA,iCAA6D;MAA7BA;QAAA,OAASqC,sBAAkB;MAAA,EAAC;MAACrC,wBAAQ;MAAAA,iBAAS;MAE9EA,8BAMC;MAIsDA,wBAAQ;MAAAA,iBAAK;MAC5DA,4BAKU;MACZA,iBAAM;MACNA,gCAA8E;MAAxBA;QAAA,OAAYqC,cAAU;MAAA,EAAC;MAC3ErC,+BAAwB;MAGlBA,uBACF;MAAAA,iBAAQ;MACRA,6BAA8I;MAChJA,iBAAM;MACNA,gCAAwB;MAEpBA,wBACF;MAAAA,iBAAQ;MACRA,6BAA6I;MAC/IA,iBAAM;MAERA,gCAA0B;MAEtBA,wBACF;MAAAA,iBAAS;MACTA,mCAA8C;MAC5CA,sBACF;MAAAA,iBAAS;;;MArDGA,mCAAQ;MAgClBA,gBAAoB;MAApBA,kCAAoB","names":["i0","MealsComponent","constructor","mainPanelService","formBuilder","group","name","price","onSubmit","addMeal","checkoutForm","value","Number","reset","ngOnInit","getMeals","addMealModal","window","bootstrap","Modal","document","getElementById","subscribe","data","meals","meal","removeMeal","id","openAddMealModal","show","closeAddMealModal","hide","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/pkocur/IdeaProjects/restaurant-manager-frontend/restaurant-manager-frontend/src/app/component/meals/meals.component.html","/home/pkocur/IdeaProjects/restaurant-manager-frontend/restaurant-manager-frontend/src/app/component/meals/meals.component.ts"],"sourcesContent":["<div *ngFor=\"let meal of meals\">\n  <div class=\"row\">\n    <div class=\"offset-4 col-4 text-center\">\n      <div class=\"mt-5 mb-3 alert alert-primary id\" role=\"alert\">\n        <span class=\"display-7\">{{meal.name}}</span>\n        <span class=\"display-7\"> - {{meal.price}} zł</span>\n      </div>\n    <button class=\"btn btn-danger\" (click)=\"removeMeal(meal.id)\">Delete</button>\n    </div>\n  </div>\n</div>\n\n<button class=\"btn btn-primary\" (click)=\"openAddMealModal()\">Add meal</button>\n\n<div\n  class=\"modal fade\"\n  id=\"addMealModal\"\n  tabindex=\"-1\"\n  aria-labelledby=\"addMealModal\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add meal</h5>\n        <button\n          type=\"button\"\n          class=\"btn-close\"\n          data-bs-dismiss=\"modal\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n      <form [noValidate]=\"false\" [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"modal-body\">\n          <div class=\"form-group\">\n            <label for=\"name\">\n              Name\n            </label>\n            <input class=\"form-control\" id=\"name\" type=\"text\" placeholder=\"Enter meal name\" required minlength=\"3\" maxlength=\"50\" formControlName=\"name\"/>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"price\">\n              Price\n            </label>\n            <input class=\"form-control\" id=\"price\" type=\"number\" placeholder=\"Enter meal price\" required step=\"0.01\" min=\"0.01\" formControlName=\"price\"/>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n            Close\n          </button>\n          <button type=\"submit\" class=\"btn btn-primary\">\n            Add\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Meal} from \"../../model/meal\";\nimport {FormBuilder} from '@angular/forms';\nimport {MainPanelService} from \"../../service/main-panel.service\";\ndeclare var window: any;\n\n@Component({\n  selector: 'app-meals',\n  templateUrl: './meals.component.html',\n  styleUrls: ['./meals.component.css']\n})\nexport class MealsComponent implements OnInit {\n  meals!: Meal[];\n  addMealModal: any;\n\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    price: ''\n  });\n\n  constructor(private mainPanelService: MainPanelService,\n              private formBuilder: FormBuilder) {\n  }\n\n  onSubmit(): void {\n    this.addMeal({\n      \"name\": this.checkoutForm.value.name,\n      \"price\": Number(this.checkoutForm.value.price)\n    });\n    this.checkoutForm.reset();\n  }\n\n\n  ngOnInit() {\n    this.getMeals();\n    this.addMealModal = new window.bootstrap.Modal(\n      document.getElementById('addMealModal')\n    );\n  }\n\n  getMeals() {\n    this.mainPanelService.getMeals().subscribe(data => {\n      this.meals = data;\n    })\n  }\n\n  addMeal(meal: Partial<Meal>) {\n    this.mainPanelService.addMeal(meal).subscribe(data => {\n      if (data) {\n        this.getMeals();\n      }\n    });\n  }\n\n  removeMeal(id: number | undefined | null) {\n    if (id) {\n      this.mainPanelService.removeMeal(id).subscribe(data => {\n        if (data) {\n          this.getMeals();\n        }\n      });\n    }\n  }\n\n  openAddMealModal() {\n    this.addMealModal.show();\n  }\n\n  closeAddMealModal() {\n    this.addMealModal.hide();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}